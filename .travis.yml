language: cpp

os: linux
dist: focal

env:
  global:
    # Ubuntu version
    - LINUX_DIST=focal
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # Global build options and C++ flags
    - CXX_FLAGS="-Wall -pedantic -Werror -Wno-variadic-macros -Wno-long-long -Wno-shadow -std:c++17 --coverage"
    # Misc
    - RUN_TESTS=true
    - COVERAGE=false

jobs:
  include:
    - stage: Windows
      name: "Build for Windows"
      os: windows
      script:
        # Install simple2d
        - wget -O simple2d.zip https://github.com/simple2d/simple2d/releases/download/v1.2.0/simple2d-windows-mingw-1.2.0.zip
        - 7z x simple2d.zip -osimple2d
        - cd simple2d
        - $mingw64 sh install.sh -y
        - cd ..
        # Build
        - mkdir build
        - cd build
        - where gcc
        - cmake ${CMAKE_OPTIONS} -G "MinGW Makefiles" -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_TESTS=ON .. 
        - $mingw64 make
      
      before_install:
        - |-
            [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
            choco uninstall -y mingw
            choco upgrade --no-progress -y msys2
            export msys2='cmd //C RefreshEnv.cmd '
            export msys2+='& set MSYS=winsymlinks:nativestrict '
            export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
            export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
            export msys2+=" -msys2 -c "\"\$@"\" --"
            $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
            taskkill //IM gpg-agent.exe //F 
            export PATH=/C/tools/msys64/mingw64/bin:$PATH
            export MAKE=mingw32-make 

        # Combine global build options with OS/compiler-dependent options
        - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
        - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}
      
      before_cache:
        - |-
            $msys2 pacman --sync --clean --noconfirm

      cache:
        directories:
          - $HOME/AppData/Local/Temp/chocolatey
          - /C/tools/msys64

    - stage: Checks
      name: "Static Checks"
      os: linux
      dist: focal
      addons:
        apt:
          packages:
            - clang-format-10
            
      script:
        # Run static checks
        - python run-clang-format.py -r src/dungeon_generation
  
    - stage: Tests
      name: "Tests and Coverage"
      os: linux
      dist: focal
      compiler: gcc
      addons:
       apt:
         packages:
           - gcc-10
           - g++-10
           - clang-10
           - valgrind
           
           # Simple 2D deps
           - libglew-dev
           - libsdl2-dev
           - libsdl2-image-dev
           - libsdl2-mixer-dev
           - libsdl2-ttf-dev
           - libegl1-mesa-dev
           - libgles2-mesa-dev
           
           # Misc
           - python-yaml
           - lcov
           - libopencv-dev
           
      before_install:
       # Combine global build options with OS/compiler-dependent options
       - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
       - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}

      install:
       - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-10" CC="clang-10"; fi
       - echo ${PATH}
       - echo ${CXX}
       - ${CXX} --version
       - ${CXX} -v
       - sudo pip install codecov
            
       # Download and install recent cmake
       - |
          if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
            CMAKE_URL="http://www.cmake.org/files/v3.18/cmake-3.18.2-Linux-x86_64.tar.gz"
            mkdir -p ${DEPS_DIR}/cmake
            travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
            export PATH=${DEPS_DIR}/cmake/bin:${PATH}
          fi
       
       # Install simple2d
       - git clone --recursive --depth 1 --branch v1.2.0 https://github.com/simple2d/simple2d.git
       - cd simple2d
       - make
       - sudo make install
       - cd ..
       
      script:
       ############################################################################
       # Build main and tests
       ############################################################################
       - mkdir -p build
       - cd build
       - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON .. 
       - make
       - make dungeon_generator_coverage
       - ctest
       
      after_success:
       - codecov -X gcov
       
    - stage: Runtime
      name: "Check for runtime errors and memory leaks"
      os: linux
      dist: focal
      compiler: gcc
      addons:
       apt:
         packages:
           - gcc-10
           - g++-10
           - clang-10
           - valgrind
           
           # Simple 2D deps
           - libglew-dev
           - libsdl2-dev
           - libsdl2-image-dev
           - libsdl2-mixer-dev
           - libsdl2-ttf-dev
           - libegl1-mesa-dev
           - libgles2-mesa-dev
           
           # Misc
           - python-yaml
           - lcov
           - libopencv-dev
           
      before_install:
       # Combine global build options with OS/compiler-dependent options
       - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
       - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}

      install:
       - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-10" CC="clang-10"; fi
       - echo ${PATH}
       - echo ${CXX}
       - ${CXX} --version
       - ${CXX} -v
       - sudo pip install codecov
            
       # Download and install recent cmake
       - |
          if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
            CMAKE_URL="http://www.cmake.org/files/v3.18/cmake-3.18.2-Linux-x86_64.tar.gz"
            mkdir -p ${DEPS_DIR}/cmake
            travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
            export PATH=${DEPS_DIR}/cmake/bin:${PATH}
          fi
       
       # Install simple2d
       - git clone --recursive --depth 1 --branch v1.2.0 https://github.com/simple2d/simple2d.git
       - cd simple2d
       - make
       - sudo make install
       - cd ..
       
      script:
       ############################################################################
       # Build main
       ############################################################################
       - mkdir -p build
       - cd build
       - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} .. 
       - make
       
       # Test for memory leaks
       - make dungeon_generator
       - valgrind --leak-check=full --track-origins=yes ./src/dungeon_generator --headless
    
deploy:
  provider: releases
  token:
    secure: sb1/I6kFC2faFvxdG48TlUM6vrfk7k6Er8umD/zfwFy4DoHyWpiBv9IGdR4MfN9OU5TcaoCd9IupTmkwaU04pHxMurmNSwkFV3SfW+Udf78+JgBakc5WwjvbKHP9MZy0D6gj+JjIyMhNXvDGt6RqrIOLkGpYvJsqxu45gH4cS+LTSqDHa2fNhVL9Mva5J10dm1WCF0gCi3REWl7sssV7aw8qZ5uVmA9Jcc6Qkm+fPoH4XZljEDqpUWdqvN5nqdfJLewW/i8DaVmjj03/1tLky7Q1fg29IXKvq/B7KuWcF1MB8c1pe9Afusk98j5w8TV+5CLk2C5HUQ3v4abMU9cB0F64J6g91qXzIYDzWkrp8zSi+nMkrVxdhf0W81tAvMOMAXAxb4wM8AgskThg7h7dDmVllSl4ezQYLP4SQJGMy+W/K95FH+5K9yZ+8ujsUvkNGuL/FwjBu1UHBAazrGof5+FBP50ibDjsOnlRYwhkCWsFpQ4pfSa8vKdZWS0HuhkkGMNx2t11jBpn+1fY6dtm0W+lUXDUIftd0ZOh33PzFx+a8NgloNHgqOTM83PuyQ+FDuapx+9hTIn7NznY4/5OFjioGbN0zlAyYQ1q+l2TM0Mzah5XqLU1ZOsys9SYJBZDqNMxQpnH5RAFBa2/fEP5KymfE3HoBNnnoGnVIjNGHD8=
  file:
    - src/dungeon_generator
    - tests/dungeon_generator_test
  on:
    repo: mikaelfr/dungeon-generation-tiralab
    tags: true
  cleanup: false
